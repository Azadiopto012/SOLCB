from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from solana.rpc.api import Client
import openai

# Initialize APIs
app = FastAPI()
solana_client = Client("https://api.mainnet-beta.solana.com")
openai.api_key = "your-openai-api-key"

# Request model
class ChatRequest(BaseModel):
    user_input: str

# System prompt
SYSTEM_PROMPT = """
You are a chatbot knowledgeable about the Solana blockchain. Assist users with technical queries,
blockchain interaction, and general advice about Solana. Provide accurate, concise, and user-friendly responses.
"""

@app.post("/chat")
async def chat(req: ChatRequest):
    try:
        # Generate AI response
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": SYSTEM_PROMPT},
                {"role": "user", "content": req.user_input}
            ]
        )
        return {"response": response['choices'][0]['message']['content']}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/balance/{wallet_address}")
async def get_balance(wallet_address: str):
    try:
        response = solana_client.get_balance(wallet_address)
        return {"wallet": wallet_address, "balance": response['result']['value']}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))
